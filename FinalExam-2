def input_employee_data():
    names = []
    salaries = []

    print("Enter employee names and salaries. Enter 'done' when finished.")

    while True:
        name = input("Enter employee name (or 'done' to finish): ")

        if name.lower() == 'done':
            break

        salary = float(input("Enter employee salary in even thousands (e.g., 36.5): "))
        
        # Round the salary to the nearest even thousand
        salary = round(salary * 1000) / 1000

        names.append(name)
        salaries.append(salary)

    return names, salaries
1
def calculate_average(salaries):
    total_salary = sum(salaries)
    average_salary = total_salary / len(salaries)
    return average_salary

def find_near_average(names, salaries, average_salary, threshold=5000):
    near_average_employees = []

    for i in range(len(names)):
        if abs(salaries[i] - average_salary) <= threshold:
            near_average_employees.append((names[i], salaries[i]))

    return near_average_employees

def display_results(average_salary, near_average_employees):
    print("\nAverage Salary: ${:.2f}".format(average_salary))

    if not near_average_employees:
        print("No employees found within $5000 of the average salary.")
    else:
        print("\nEmployees with salaries within $5000 of the average:")
        for name, salary in near_average_employees:
            print("{}: ${:.2f}".format(name, salary))

if __name__ == "__main__":
    employee_names, employee_salaries = input_employee_data()

    if not employee_names or not employee_salaries:
        print("No data entered. Exiting.")
    else:
        average_salary = calculate_average(employee_salaries)
        near_average_employees = find_near_average(employee_names, employee_salaries, average_salary)
        display_results(average_salary, near_average_employees)